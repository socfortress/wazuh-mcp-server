[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wazuh-mcp-server"
version = "0.1.0"
description = "Model Context Protocol server for Wazuh Manager integration"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "SOCFortress", email = "info@socfortress.co"},
]
keywords = ["wazuh", "mcp", "llm", "security", "siem"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastmcp>=0.4",
    "uvicorn[standard]>=0.30",
    "httpx[http2]>=0.27",
    "pydantic>=2.7",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    "click>=8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.0",
]

[project.urls]
Homepage = "https://github.com/socfortress/wazuh-mcp-server"
Repository = "https://github.com/socfortress/wazuh-mcp-server"
Documentation = "https://github.com/socfortress/wazuh-mcp-server#readme"
Issues = "https://github.com/socfortress/wazuh-mcp-server/issues"

[project.scripts]
wazuh-mcp-server = "wazuh_mcp_server.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["wazuh_mcp_server*"]

[tool.setuptools.package-data]
wazuh_mcp_server = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["wazuh_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
